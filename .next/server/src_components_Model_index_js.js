/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_components_Model_index_js";
exports.ids = ["src_components_Model_index_js"];
exports.modules = {

/***/ "./src/components/Model/Model.module.css":
/*!***********************************************!*\
  !*** ./src/components/Model/Model.module.css ***!
  \***********************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"model\": \"Model_model__228ej\",\n\t\"canvas\": \"Model_canvas__kaLjL\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Nb2RlbC9Nb2RlbC5tb2R1bGUuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9zcmMvY29tcG9uZW50cy9Nb2RlbC9Nb2RlbC5tb2R1bGUuY3NzPzkxNzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwibW9kZWxcIjogXCJNb2RlbF9tb2RlbF9fMjI4ZWpcIixcblx0XCJjYW52YXNcIjogXCJNb2RlbF9jYW52YXNfX2thTGpMXCJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Model/Model.module.css\n");

/***/ }),

/***/ "./src/components/Model/Model.js":
/*!***************************************!*\
  !*** ./src/components/Model/Model.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Model\": () => (/* binding */ Model)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framer-motion */ \"framer-motion\");\n/* harmony import */ var hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hooks */ \"./src/hooks/index.js\");\n/* harmony import */ var hooks_useFps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hooks/useFps */ \"./src/hooks/useFps.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three-stdlib */ \"three-stdlib\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(three_stdlib__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var utils_image__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! utils/image */ \"./src/utils/image.js\");\n/* harmony import */ var utils_style__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! utils/style */ \"./src/utils/style.js\");\n/* harmony import */ var utils_three__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! utils/three */ \"./src/utils/three.js\");\n/* harmony import */ var _Model_module_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Model.module.css */ \"./src/components/Model/Model.module.css\");\n/* harmony import */ var _Model_module_css__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_Model_module_css__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _deviceModels__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./deviceModels */ \"./src/components/Model/deviceModels.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([framer_motion__WEBPACK_IMPORTED_MODULE_1__, hooks__WEBPACK_IMPORTED_MODULE_2__, three__WEBPACK_IMPORTED_MODULE_5__, utils_three__WEBPACK_IMPORTED_MODULE_9__]);\n([framer_motion__WEBPACK_IMPORTED_MODULE_1__, hooks__WEBPACK_IMPORTED_MODULE_2__, three__WEBPACK_IMPORTED_MODULE_5__, utils_three__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\nconst MeshType = {\n    Frame: \"Frame\",\n    Logo: \"Logo\",\n    Screen: \"Screen\"\n};\nconst rotationSpringConfig = {\n    stiffness: 40,\n    damping: 20,\n    mass: 1.4,\n    restSpeed: 0.001\n};\nconst Model = ({ models , show =true , showDelay =0 , cameraPosition ={\n    x: 0,\n    y: 0,\n    z: 8\n} , style , className , alt , ...rest })=>{\n    const { 0: loaded , 1: setLoaded  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const container = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const canvas = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const camera = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const modelGroup = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const scene = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const renderer = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const shadowGroup = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const renderTarget = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const renderTargetBlur = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const shadowCamera = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const depthMaterial = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const horizontalBlurMaterial = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const verticalBlurMaterial = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const plane = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const lights = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const blurPlane = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const fillPlane = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    const isInViewport = (0,hooks__WEBPACK_IMPORTED_MODULE_2__.useInViewport)(container, false, {\n        threshold: 0.2\n    });\n    const reduceMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.useReducedMotion)();\n    const rotationX = (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.useSpring)(0, rotationSpringConfig);\n    const rotationY = (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.useSpring)(0, rotationSpringConfig);\n    const { measureFps , isLowFps  } = (0,hooks_useFps__WEBPACK_IMPORTED_MODULE_3__.useFps)(isInViewport);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const { clientWidth , clientHeight  } = container.current;\n        renderer.current = new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderer({\n            canvas: canvas.current,\n            alpha: true,\n            antialias: false,\n            powerPreference: \"high-performance\",\n            failIfMajorPerformanceCaveat: true\n        });\n        renderer.current.setPixelRatio(2);\n        renderer.current.setSize(clientWidth, clientHeight);\n        renderer.current.outputEncoding = three__WEBPACK_IMPORTED_MODULE_5__.sRGBEncoding;\n        renderer.current.physicallyCorrectLights = true;\n        camera.current = new three__WEBPACK_IMPORTED_MODULE_5__.PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\n        camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n        scene.current = new three__WEBPACK_IMPORTED_MODULE_5__.Scene();\n        modelGroup.current = new three__WEBPACK_IMPORTED_MODULE_5__.Group();\n        scene.current.add(modelGroup.current);\n        // Lighting\n        const ambientLight = new three__WEBPACK_IMPORTED_MODULE_5__.AmbientLight(0xffffff, 1.2);\n        const keyLight = new three__WEBPACK_IMPORTED_MODULE_5__.DirectionalLight(0xffffff, 1.1);\n        const fillLight = new three__WEBPACK_IMPORTED_MODULE_5__.DirectionalLight(0xffffff, 0.8);\n        fillLight.position.set(-6, 2, 2);\n        keyLight.position.set(0.5, 0, 0.866);\n        lights.current = [\n            ambientLight,\n            keyLight,\n            fillLight\n        ];\n        lights.current.forEach((light)=>scene.current.add(light));\n        // The shadow container, if you need to move the plane just move this\n        shadowGroup.current = new three__WEBPACK_IMPORTED_MODULE_5__.Group();\n        scene.current.add(shadowGroup.current);\n        shadowGroup.current.position.set(0, 0, -0.8);\n        shadowGroup.current.rotateX(Math.PI / 2);\n        const renderTargetSize = 512;\n        const planeWidth = 8;\n        const planeHeight = 8;\n        const cameraHeight = 1.5;\n        const shadowOpacity = 0.8;\n        const shadowDarkness = 3;\n        // The render target that will show the shadows in the plane texture\n        renderTarget.current = new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderTarget(renderTargetSize, renderTargetSize);\n        renderTarget.current.texture.generateMipmaps = false;\n        // The render target that we will use to blur the first render target\n        renderTargetBlur.current = new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderTarget(renderTargetSize, renderTargetSize);\n        renderTargetBlur.current.texture.generateMipmaps = false;\n        // Make a plane and make it face up\n        const planeGeometry = new three__WEBPACK_IMPORTED_MODULE_5__.PlaneBufferGeometry(planeWidth, planeHeight).rotateX(Math.PI / 2);\n        const planeMaterial = new three__WEBPACK_IMPORTED_MODULE_5__.MeshBasicMaterial({\n            map: renderTarget.current.texture,\n            opacity: shadowOpacity,\n            transparent: true\n        });\n        plane.current = new three__WEBPACK_IMPORTED_MODULE_5__.Mesh(planeGeometry, planeMaterial);\n        // The y from the texture is flipped!\n        plane.current.scale.y = -1;\n        shadowGroup.current.add(plane.current);\n        // The plane onto which to blur the texture\n        blurPlane.current = new three__WEBPACK_IMPORTED_MODULE_5__.Mesh(planeGeometry);\n        blurPlane.current.visible = false;\n        shadowGroup.current.add(blurPlane.current);\n        // The plane with the color of the ground\n        const fillMaterial = new three__WEBPACK_IMPORTED_MODULE_5__.MeshBasicMaterial({\n            color: 0xffffff,\n            opacity: 0,\n            transparent: true\n        });\n        fillPlane.current = new three__WEBPACK_IMPORTED_MODULE_5__.Mesh(planeGeometry, fillMaterial);\n        fillPlane.current.rotateX(Math.PI);\n        fillPlane.current.position.y -= 0.00001;\n        shadowGroup.current.add(fillPlane.current);\n        // The camera to render the depth material from\n        shadowCamera.current = new three__WEBPACK_IMPORTED_MODULE_5__.OrthographicCamera(-planeWidth / 2, planeWidth / 2, planeHeight / 2, -planeHeight / 2, 0, cameraHeight);\n        // Get the camera to look up\n        shadowCamera.current.rotation.x = Math.PI / 2;\n        shadowGroup.current.add(shadowCamera.current);\n        // Like MeshDepthMaterial, but goes from black to transparent\n        depthMaterial.current = new three__WEBPACK_IMPORTED_MODULE_5__.MeshDepthMaterial();\n        depthMaterial.current.userData.darkness = {\n            value: shadowDarkness\n        };\n        depthMaterial.current.onBeforeCompile = (shader)=>{\n            shader.uniforms.darkness = depthMaterial.current.userData.darkness;\n            shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\", \"gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );\")}\n      `;\n        };\n        depthMaterial.current.depthTest = false;\n        depthMaterial.current.depthWrite = false;\n        horizontalBlurMaterial.current = new three__WEBPACK_IMPORTED_MODULE_5__.ShaderMaterial(three_stdlib__WEBPACK_IMPORTED_MODULE_6__.HorizontalBlurShader);\n        horizontalBlurMaterial.current.depthTest = false;\n        verticalBlurMaterial.current = new three__WEBPACK_IMPORTED_MODULE_5__.ShaderMaterial(three_stdlib__WEBPACK_IMPORTED_MODULE_6__.VerticalBlurShader);\n        verticalBlurMaterial.current.depthTest = false;\n        const unsubscribeX = rotationX.onChange(renderFrame);\n        const unsubscribeY = rotationY.onChange(renderFrame);\n        return ()=>{\n            renderTarget.current.dispose();\n            renderTargetBlur.current.dispose();\n            (0,utils_three__WEBPACK_IMPORTED_MODULE_9__.removeLights)(lights.current);\n            (0,utils_three__WEBPACK_IMPORTED_MODULE_9__.cleanScene)(scene.current);\n            (0,utils_three__WEBPACK_IMPORTED_MODULE_9__.cleanRenderer)(renderer.current);\n            unsubscribeX();\n            unsubscribeY();\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const blurShadow = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((amount)=>{\n        blurPlane.current.visible = true;\n        // Blur horizontally and draw in the renderTargetBlur\n        blurPlane.current.material = horizontalBlurMaterial.current;\n        blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\n        horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\n        renderer.current.setRenderTarget(renderTargetBlur.current);\n        renderer.current.render(blurPlane.current, shadowCamera.current);\n        // Blur vertically and draw in the main renderTarget\n        blurPlane.current.material = verticalBlurMaterial.current;\n        blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\n        verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\n        renderer.current.setRenderTarget(renderTarget.current);\n        renderer.current.render(blurPlane.current, shadowCamera.current);\n        blurPlane.current.visible = false;\n    }, []);\n    // Handle render passes for a single frame\n    const renderFrame = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(()=>{\n        const blurAmount = 5;\n        // Remove the background\n        const initialBackground = scene.current.background;\n        scene.current.background = null;\n        // Force the depthMaterial to everything\n        // cameraHelper.visible = false;\n        scene.current.overrideMaterial = depthMaterial.current;\n        // Render to the render target to get the depths\n        renderer.current.setRenderTarget(renderTarget.current);\n        renderer.current.render(scene.current, shadowCamera.current);\n        // And reset the override material\n        scene.current.overrideMaterial = null;\n        blurShadow(blurAmount);\n        // A second pass to reduce the artifacts\n        // (0.4 is the minimum blur amout so that the artifacts are gone)\n        blurShadow(blurAmount * 0.4);\n        // Reset and render the normal scene\n        renderer.current.setRenderTarget(null);\n        scene.current.background = initialBackground;\n        modelGroup.current.rotation.x = rotationX.get();\n        modelGroup.current.rotation.y = rotationY.get();\n        renderer.current.render(scene.current, camera.current);\n        measureFps();\n        if (isLowFps.current) {\n            renderer.current.setPixelRatio(1);\n        } else {\n            renderer.current.setPixelRatio(2);\n        }\n    }, [\n        blurShadow,\n        isLowFps,\n        measureFps,\n        rotationX,\n        rotationY\n    ]);\n    // Handle mouse move animation\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const onMouseMove = (event)=>{\n            const { innerWidth , innerHeight  } = window;\n            const position = {\n                x: (event.clientX - innerWidth / 2) / innerWidth,\n                y: (event.clientY - innerHeight / 2) / innerHeight\n            };\n            rotationY.set(position.x / 2);\n            rotationX.set(position.y / 2);\n        };\n        if (isInViewport && !reduceMotion) {\n            window.addEventListener(\"mousemove\", onMouseMove);\n        }\n        return ()=>{\n            window.removeEventListener(\"mousemove\", onMouseMove);\n        };\n    }, [\n        isInViewport,\n        reduceMotion,\n        rotationX,\n        rotationY\n    ]);\n    // Handle window resize\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const handleResize = ()=>{\n            if (!container.current) return;\n            const { clientWidth , clientHeight  } = container.current;\n            renderer.current.setSize(clientWidth, clientHeight);\n            camera.current.aspect = clientWidth / clientHeight;\n            camera.current.updateProjectionMatrix();\n            renderFrame();\n        };\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, [\n        renderFrame\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (0,utils_style__WEBPACK_IMPORTED_MODULE_8__.classes)((_Model_module_css__WEBPACK_IMPORTED_MODULE_11___default().model), className),\n        \"data-loaded\": loaded,\n        style: (0,utils_style__WEBPACK_IMPORTED_MODULE_8__.cssProps)({\n            delay: (0,utils_style__WEBPACK_IMPORTED_MODULE_8__.numToMs)(showDelay)\n        }, style),\n        ref: container,\n        role: \"img\",\n        \"aria-label\": alt,\n        ...rest,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                className: (_Model_module_css__WEBPACK_IMPORTED_MODULE_11___default().canvas),\n                ref: canvas\n            }, void 0, false, {\n                fileName: \"/Users/BertWORK/Desktop/portfolio-master/src/components/Model/Model.js\",\n                lineNumber: 347,\n                columnNumber: 7\n            }, undefined),\n            models.map((model, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Device, {\n                    renderer: renderer,\n                    modelGroup: modelGroup,\n                    show: show,\n                    showDelay: showDelay,\n                    renderFrame: renderFrame,\n                    index: index,\n                    setLoaded: setLoaded,\n                    model: model\n                }, JSON.stringify(model.position), false, {\n                    fileName: \"/Users/BertWORK/Desktop/portfolio-master/src/components/Model/Model.js\",\n                    lineNumber: 349,\n                    columnNumber: 9\n                }, undefined))\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/BertWORK/Desktop/portfolio-master/src/components/Model/Model.js\",\n        lineNumber: 338,\n        columnNumber: 5\n    }, undefined);\n};\nconst Device = ({ renderer , model , modelGroup , renderFrame , index , showDelay , setLoaded , show ,  })=>{\n    const { 0: loadDevice , 1: setLoadDevice  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const reduceMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.useReducedMotion)();\n    const placeholderScreen = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_4__.createRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const applyScreenTexture = async (texture, node)=>{\n            texture.encoding = three__WEBPACK_IMPORTED_MODULE_5__.sRGBEncoding;\n            texture.flipY = false;\n            texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n            texture.generateMipmaps = false;\n            // Decode the texture to prevent jank on first render\n            await renderer.current.initTexture(texture);\n            node.material.color = new three__WEBPACK_IMPORTED_MODULE_5__.Color(0xffffff);\n            node.material.transparent = true;\n            node.material.map = texture;\n        };\n        // Generate promises to await when ready\n        const load = async ()=>{\n            const { texture , position , url  } = model;\n            let loadFullResTexture;\n            let playAnimation;\n            const [placeholder, gltf] = await Promise.all([\n                await utils_three__WEBPACK_IMPORTED_MODULE_9__.textureLoader.loadAsync(texture.placeholder.src),\n                await utils_three__WEBPACK_IMPORTED_MODULE_9__.modelLoader.loadAsync(url), \n            ]);\n            modelGroup.current.add(gltf.scene);\n            gltf.scene.traverse(async (node)=>{\n                if (node.material) {\n                    node.material.color = new three__WEBPACK_IMPORTED_MODULE_5__.Color(0x1f2025);\n                    node.material.color.convertSRGBToLinear();\n                }\n                if (node.name === MeshType.Screen) {\n                    // Create a copy of the screen mesh so we can fade it out\n                    // over the full resolution screen texture\n                    placeholderScreen.current = node.clone();\n                    placeholderScreen.current.material = node.material.clone();\n                    node.parent.add(placeholderScreen.current);\n                    placeholderScreen.current.material.opacity = 1;\n                    placeholderScreen.current.position.z += 0.001;\n                    applyScreenTexture(placeholder, placeholderScreen.current);\n                    loadFullResTexture = async ()=>{\n                        const image = await (0,utils_image__WEBPACK_IMPORTED_MODULE_7__.resolveSrcFromSrcSet)(texture);\n                        const fullSize = await utils_three__WEBPACK_IMPORTED_MODULE_9__.textureLoader.loadAsync(image);\n                        await applyScreenTexture(fullSize, node);\n                        (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.animate)(1, 0, {\n                            onUpdate: (value)=>{\n                                placeholderScreen.current.material.opacity = value;\n                                renderFrame();\n                            }\n                        });\n                    };\n                }\n            });\n            const targetPosition = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(position.x, position.y, position.z);\n            if (reduceMotion) {\n                gltf.scene.position.set(...targetPosition.toArray());\n            }\n            // Simple slide up animation\n            if (model.animation === _deviceModels__WEBPACK_IMPORTED_MODULE_10__.ModelAnimationType.SpringUp) {\n                playAnimation = ()=>{\n                    const startPosition = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(targetPosition.x, targetPosition.y - 1, targetPosition.z);\n                    gltf.scene.position.set(...startPosition.toArray());\n                    (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.animate)(startPosition.y, targetPosition.y, {\n                        type: \"spring\",\n                        delay: (300 * index + showDelay) / 1000,\n                        stiffness: 60,\n                        damping: 20,\n                        mass: 1,\n                        restSpeed: 0.0001,\n                        restDelta: 0.0001,\n                        onUpdate: (value)=>{\n                            gltf.scene.position.y = value;\n                            renderFrame();\n                        }\n                    });\n                };\n            }\n            // Swing the laptop lid open\n            if (model.animation === _deviceModels__WEBPACK_IMPORTED_MODULE_10__.ModelAnimationType.LaptopOpen) {\n                playAnimation = ()=>{\n                    const frameNode = gltf.scene.children.find((node)=>node.name === MeshType.Frame);\n                    const startRotation = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(three__WEBPACK_IMPORTED_MODULE_5__.MathUtils.degToRad(90), 0, 0);\n                    const endRotation = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(0, 0, 0);\n                    gltf.scene.position.set(...targetPosition.toArray());\n                    frameNode.rotation.set(...startRotation.toArray());\n                    return (0,framer_motion__WEBPACK_IMPORTED_MODULE_1__.animate)(startRotation.x, endRotation.x, {\n                        type: \"spring\",\n                        delay: (300 * index + showDelay + 300) / 1000,\n                        stiffness: 80,\n                        damping: 20,\n                        restSpeed: 0.0001,\n                        restDelta: 0.0001,\n                        onUpdate: (value)=>{\n                            frameNode.rotation.x = value;\n                            renderFrame();\n                        }\n                    });\n                };\n            }\n            return {\n                loadFullResTexture,\n                playAnimation\n            };\n        };\n        setLoadDevice({\n            start: load\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        if (!loadDevice || !show) return;\n        let animation;\n        const onLoad = async ()=>{\n            const { loadFullResTexture , playAnimation  } = await loadDevice.start();\n            setLoaded(true);\n            if (!reduceMotion) {\n                animation = playAnimation();\n            }\n            await loadFullResTexture();\n            if (reduceMotion) {\n                renderFrame();\n            }\n        };\n        (0,react__WEBPACK_IMPORTED_MODULE_4__.startTransition)(()=>{\n            onLoad();\n        });\n        return ()=>{\n            animation?.stop();\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        loadDevice,\n        show\n    ]);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Model/Model.js\n");

/***/ }),

/***/ "./src/components/Model/index.js":
/*!***************************************!*\
  !*** ./src/components/Model/index.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Model */ \"./src/components/Model/Model.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Model__WEBPACK_IMPORTED_MODULE_0__]);\n_Model__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Model__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Model__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Nb2RlbC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL3NyYy9jb21wb25lbnRzL01vZGVsL2luZGV4LmpzPzIxZjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9Nb2RlbCc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Model/index.js\n");

/***/ }),

/***/ "./src/hooks/useFps.js":
/*!*****************************!*\
  !*** ./src/hooks/useFps.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useFps\": () => (/* binding */ useFps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst HISTORY_LENGTH = 9;\nfunction useFps(running = true) {\n    const fps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const prevTime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const frames = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const frameHistory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const isLowFps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (true) return;\n        prevTime.current = performance.now();\n        frames.current = 0;\n        frameHistory.current = [];\n    }, [\n        running\n    ]);\n    const measureFps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const currentTime = performance.now();\n        frames.current = frames.current + 1;\n        // Measure fps every 100ms\n        if (currentTime >= prevTime.current + 100) {\n            fps.current = frames.current * 100 / (currentTime - prevTime.current) * 10;\n            frameHistory.current.push(fps.current);\n            prevTime.current = currentTime;\n            frames.current = 0;\n        }\n        if (frameHistory.current.length <= HISTORY_LENGTH) return;\n        frameHistory.current = frameHistory.current.slice(-HISTORY_LENGTH);\n        // Below 60 is considered low fps\n        if (frameHistory.current.every((item)=>item < 60)) {\n            isLowFps.current = true;\n        }\n        if (frameHistory.current.every((item)=>item > 70)) {\n            isLowFps.current = false;\n        }\n    }, []);\n    return {\n        measureFps,\n        fps,\n        isLowFps\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvdXNlRnBzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUV2RCxNQUFNRyxjQUFjLEdBQUcsQ0FBQztBQUVqQixTQUFTQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJLEVBQUU7SUFDckMsTUFBTUMsR0FBRyxHQUFHSiw2Q0FBTSxDQUFDLENBQUMsQ0FBQztJQUNyQixNQUFNSyxRQUFRLEdBQUdMLDZDQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU1NLE1BQU0sR0FBR04sNkNBQU0sQ0FBQyxDQUFDLENBQUM7SUFDeEIsTUFBTU8sWUFBWSxHQUFHUCw2Q0FBTSxDQUFDLEVBQUUsQ0FBQztJQUMvQixNQUFNUSxRQUFRLEdBQUdSLDZDQUFNLENBQUMsS0FBSyxDQUFDO0lBRTlCRCxnREFBUyxDQUFDLElBQU07UUFDZCxJQUFJLElBQTZCLEVBQUUsT0FBTztRQUMxQ00sUUFBUSxDQUFDSSxPQUFPLEdBQUdDLFdBQVcsQ0FBQ0MsR0FBRyxFQUFFLENBQUM7UUFDckNMLE1BQU0sQ0FBQ0csT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNuQkYsWUFBWSxDQUFDRSxPQUFPLEdBQUcsRUFBRSxDQUFDO0tBQzNCLEVBQUU7UUFBQ04sT0FBTztLQUFDLENBQUMsQ0FBQztJQUVkLE1BQU1TLFVBQVUsR0FBR2Qsa0RBQVcsQ0FBQyxJQUFNO1FBQ25DLE1BQU1lLFdBQVcsR0FBR0gsV0FBVyxDQUFDQyxHQUFHLEVBQUU7UUFDckNMLE1BQU0sQ0FBQ0csT0FBTyxHQUFHSCxNQUFNLENBQUNHLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFFcEMsMEJBQTBCO1FBQzFCLElBQUlJLFdBQVcsSUFBSVIsUUFBUSxDQUFDSSxPQUFPLEdBQUcsR0FBRyxFQUFFO1lBQ3pDTCxHQUFHLENBQUNLLE9BQU8sR0FBRyxNQUFRLENBQUNBLE9BQU8sR0FBRyxHQUFHLEdBQUksQ0FBQ0ksV0FBVyxHQUFHUixRQUFRLENBQUNJLE9BQU8sQ0FBQyxHQUFJLEVBQUUsQ0FBQztZQUMvRUYsWUFBWSxDQUFDRSxPQUFPLENBQUNLLElBQUksQ0FBQ1YsR0FBRyxDQUFDSyxPQUFPLENBQUMsQ0FBQztZQUN2Q0osUUFBUSxDQUFDSSxPQUFPLEdBQUdJLFdBQVcsQ0FBQztZQUMvQlAsTUFBTSxDQUFDRyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1NBQ3BCO1FBRUQsSUFBSUYsWUFBWSxDQUFDRSxPQUFPLENBQUNNLE1BQU0sSUFBSWQsY0FBYyxFQUFFLE9BQU87UUFDMURNLFlBQVksQ0FBQ0UsT0FBTyxHQUFHRixZQUFZLENBQUNFLE9BQU8sQ0FBQ08sS0FBSyxDQUFDLENBQUNmLGNBQWMsQ0FBQyxDQUFDO1FBRW5FLGlDQUFpQztRQUNqQyxJQUFJTSxZQUFZLENBQUNFLE9BQU8sQ0FBQ1EsS0FBSyxDQUFDQyxDQUFBQSxJQUFJLEdBQUlBLElBQUksR0FBRyxFQUFFLENBQUMsRUFBRTtZQUNqRFYsUUFBUSxDQUFDQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO1FBRUQsSUFBSUYsWUFBWSxDQUFDRSxPQUFPLENBQUNRLEtBQUssQ0FBQ0MsQ0FBQUEsSUFBSSxHQUFJQSxJQUFJLEdBQUcsRUFBRSxDQUFDLEVBQUU7WUFDakRWLFFBQVEsQ0FBQ0MsT0FBTyxHQUFHLEtBQUssQ0FBQztTQUMxQjtLQUNGLEVBQUUsRUFBRSxDQUFDO0lBRU4sT0FBTztRQUFFRyxVQUFVO1FBQUVSLEdBQUc7UUFBRUksUUFBUTtLQUFFLENBQUM7Q0FDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9zcmMvaG9va3MvdXNlRnBzLmpzPzI5MTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBISVNUT1JZX0xFTkdUSCA9IDk7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VGcHMocnVubmluZyA9IHRydWUpIHtcbiAgY29uc3QgZnBzID0gdXNlUmVmKDApO1xuICBjb25zdCBwcmV2VGltZSA9IHVzZVJlZigwKTtcbiAgY29uc3QgZnJhbWVzID0gdXNlUmVmKDApO1xuICBjb25zdCBmcmFtZUhpc3RvcnkgPSB1c2VSZWYoW10pO1xuICBjb25zdCBpc0xvd0ZwcyA9IHVzZVJlZihmYWxzZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcbiAgICBwcmV2VGltZS5jdXJyZW50ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgZnJhbWVzLmN1cnJlbnQgPSAwO1xuICAgIGZyYW1lSGlzdG9yeS5jdXJyZW50ID0gW107XG4gIH0sIFtydW5uaW5nXSk7XG5cbiAgY29uc3QgbWVhc3VyZUZwcyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIGZyYW1lcy5jdXJyZW50ID0gZnJhbWVzLmN1cnJlbnQgKyAxO1xuXG4gICAgLy8gTWVhc3VyZSBmcHMgZXZlcnkgMTAwbXNcbiAgICBpZiAoY3VycmVudFRpbWUgPj0gcHJldlRpbWUuY3VycmVudCArIDEwMCkge1xuICAgICAgZnBzLmN1cnJlbnQgPSAoKGZyYW1lcy5jdXJyZW50ICogMTAwKSAvIChjdXJyZW50VGltZSAtIHByZXZUaW1lLmN1cnJlbnQpKSAqIDEwO1xuICAgICAgZnJhbWVIaXN0b3J5LmN1cnJlbnQucHVzaChmcHMuY3VycmVudCk7XG4gICAgICBwcmV2VGltZS5jdXJyZW50ID0gY3VycmVudFRpbWU7XG4gICAgICBmcmFtZXMuY3VycmVudCA9IDA7XG4gICAgfVxuXG4gICAgaWYgKGZyYW1lSGlzdG9yeS5jdXJyZW50Lmxlbmd0aCA8PSBISVNUT1JZX0xFTkdUSCkgcmV0dXJuO1xuICAgIGZyYW1lSGlzdG9yeS5jdXJyZW50ID0gZnJhbWVIaXN0b3J5LmN1cnJlbnQuc2xpY2UoLUhJU1RPUllfTEVOR1RIKTtcblxuICAgIC8vIEJlbG93IDYwIGlzIGNvbnNpZGVyZWQgbG93IGZwc1xuICAgIGlmIChmcmFtZUhpc3RvcnkuY3VycmVudC5ldmVyeShpdGVtID0+IGl0ZW0gPCA2MCkpIHtcbiAgICAgIGlzTG93RnBzLmN1cnJlbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChmcmFtZUhpc3RvcnkuY3VycmVudC5ldmVyeShpdGVtID0+IGl0ZW0gPiA3MCkpIHtcbiAgICAgIGlzTG93RnBzLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4geyBtZWFzdXJlRnBzLCBmcHMsIGlzTG93RnBzIH07XG59XG4iXSwibmFtZXMiOlsidXNlQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJISVNUT1JZX0xFTkdUSCIsInVzZUZwcyIsInJ1bm5pbmciLCJmcHMiLCJwcmV2VGltZSIsImZyYW1lcyIsImZyYW1lSGlzdG9yeSIsImlzTG93RnBzIiwiY3VycmVudCIsInBlcmZvcm1hbmNlIiwibm93IiwibWVhc3VyZUZwcyIsImN1cnJlbnRUaW1lIiwicHVzaCIsImxlbmd0aCIsInNsaWNlIiwiZXZlcnkiLCJpdGVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/useFps.js\n");

/***/ }),

/***/ "./src/utils/three.js":
/*!****************************!*\
  !*** ./src/utils/three.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cleanMaterial\": () => (/* binding */ cleanMaterial),\n/* harmony export */   \"cleanRenderer\": () => (/* binding */ cleanRenderer),\n/* harmony export */   \"cleanScene\": () => (/* binding */ cleanScene),\n/* harmony export */   \"getChild\": () => (/* binding */ getChild),\n/* harmony export */   \"modelLoader\": () => (/* binding */ modelLoader),\n/* harmony export */   \"removeLights\": () => (/* binding */ removeLights),\n/* harmony export */   \"textureLoader\": () => (/* binding */ textureLoader)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three-stdlib */ \"three-stdlib\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(three_stdlib__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Enable caching for all loaders\nthree__WEBPACK_IMPORTED_MODULE_0__.Cache.enabled = true;\nconst dracoLoader = new three_stdlib__WEBPACK_IMPORTED_MODULE_1__.DRACOLoader();\nconst gltfLoader = new three_stdlib__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader();\ndracoLoader.setDecoderPath(\"/draco/\");\ngltfLoader.setDRACOLoader(dracoLoader);\n/**\n * GLTF model loader configured with draco decoder\n */ const modelLoader = gltfLoader;\nconst textureLoader = new three__WEBPACK_IMPORTED_MODULE_0__.TextureLoader();\n/**\n * Clean up a scene's materials and geometry\n */ const cleanScene = (scene)=>{\n    scene?.traverse((object)=>{\n        if (!object.isMesh) return;\n        object.geometry.dispose();\n        if (object.material.isMaterial) {\n            cleanMaterial(object.material);\n        } else {\n            for (const material of object.material){\n                cleanMaterial(material);\n            }\n        }\n    });\n};\n/**\n * Clean up and dispose of a material\n */ const cleanMaterial = (material)=>{\n    material.dispose();\n    for (const key of Object.keys(material)){\n        const value = material[key];\n        if (value && typeof value === \"object\" && \"minFilter\" in value) {\n            value.dispose();\n            // Close GLTF bitmap textures\n            value.source?.data?.close?.();\n        }\n    }\n};\n/**\n * Clean up and dispose of a renderer\n */ const cleanRenderer = (renderer)=>{\n    renderer.dispose();\n    renderer = null;\n};\n/**\n * Clean up lights by removing them from their parent\n */ const removeLights = (lights)=>{\n    for (const light of lights){\n        light.parent.remove(light);\n    }\n};\n/**\n * Get child by name\n */ const getChild = (name, object)=>{\n    let node;\n    object.traverse((child)=>{\n        if (child.name === name) {\n            node = child;\n        }\n    });\n    return node;\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdGhyZWUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNVO0FBRXZELGlDQUFpQztBQUNqQ0EsZ0RBQWEsR0FBRyxJQUFJLENBQUM7QUFFckIsTUFBTUssV0FBVyxHQUFHLElBQUlILHFEQUFXLEVBQUU7QUFDckMsTUFBTUksVUFBVSxHQUFHLElBQUlILG9EQUFVLEVBQUU7QUFDbkNFLFdBQVcsQ0FBQ0UsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3RDRCxVQUFVLENBQUNFLGNBQWMsQ0FBQ0gsV0FBVyxDQUFDLENBQUM7QUFFdkM7O0NBRUMsR0FDTSxNQUFNSSxXQUFXLEdBQUdILFVBQVUsQ0FBQztBQUMvQixNQUFNSSxhQUFhLEdBQUcsSUFBSVQsZ0RBQWEsRUFBRSxDQUFDO0FBRWpEOztDQUVDLEdBQ00sTUFBTVUsVUFBVSxHQUFHQyxDQUFBQSxLQUFLLEdBQUk7SUFDakNBLEtBQUssRUFBRUMsUUFBUSxDQUFDQyxDQUFBQSxNQUFNLEdBQUk7UUFDeEIsSUFBSSxDQUFDQSxNQUFNLENBQUNDLE1BQU0sRUFBRSxPQUFPO1FBRTNCRCxNQUFNLENBQUNFLFFBQVEsQ0FBQ0MsT0FBTyxFQUFFLENBQUM7UUFFMUIsSUFBSUgsTUFBTSxDQUFDSSxRQUFRLENBQUNDLFVBQVUsRUFBRTtZQUM5QkMsYUFBYSxDQUFDTixNQUFNLENBQUNJLFFBQVEsQ0FBQyxDQUFDO1NBQ2hDLE1BQU07WUFDTCxLQUFLLE1BQU1BLFFBQVEsSUFBSUosTUFBTSxDQUFDSSxRQUFRLENBQUU7Z0JBQ3RDRSxhQUFhLENBQUNGLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7S0FDRixDQUFDLENBQUM7Q0FDSixDQUFDO0FBRUY7O0NBRUMsR0FDTSxNQUFNRSxhQUFhLEdBQUdGLENBQUFBLFFBQVEsR0FBSTtJQUN2Q0EsUUFBUSxDQUFDRCxPQUFPLEVBQUUsQ0FBQztJQUVuQixLQUFLLE1BQU1JLEdBQUcsSUFBSUMsTUFBTSxDQUFDQyxJQUFJLENBQUNMLFFBQVEsQ0FBQyxDQUFFO1FBQ3ZDLE1BQU1NLEtBQUssR0FBR04sUUFBUSxDQUFDRyxHQUFHLENBQUM7UUFDM0IsSUFBSUcsS0FBSyxJQUFJLE9BQU9BLEtBQUssS0FBSyxRQUFRLElBQUksV0FBVyxJQUFJQSxLQUFLLEVBQUU7WUFDOURBLEtBQUssQ0FBQ1AsT0FBTyxFQUFFLENBQUM7WUFFaEIsNkJBQTZCO1lBQzdCTyxLQUFLLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLElBQUksQ0FBQztTQUMvQjtLQUNGO0NBQ0YsQ0FBQztBQUVGOztDQUVDLEdBQ00sTUFBTUMsYUFBYSxHQUFHQyxDQUFBQSxRQUFRLEdBQUk7SUFDdkNBLFFBQVEsQ0FBQ1osT0FBTyxFQUFFLENBQUM7SUFDbkJZLFFBQVEsR0FBRyxJQUFJLENBQUM7Q0FDakIsQ0FBQztBQUVGOztDQUVDLEdBQ00sTUFBTUMsWUFBWSxHQUFHQyxDQUFBQSxNQUFNLEdBQUk7SUFDcEMsS0FBSyxNQUFNQyxLQUFLLElBQUlELE1BQU0sQ0FBRTtRQUMxQkMsS0FBSyxDQUFDQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0YsS0FBSyxDQUFDLENBQUM7S0FDNUI7Q0FDRixDQUFDO0FBRUY7O0NBRUMsR0FDTSxNQUFNRyxRQUFRLEdBQUcsQ0FBQ0MsSUFBSSxFQUFFdEIsTUFBTSxHQUFLO0lBQ3hDLElBQUl1QixJQUFJO0lBRVJ2QixNQUFNLENBQUNELFFBQVEsQ0FBQ3lCLENBQUFBLEtBQUssR0FBSTtRQUN2QixJQUFJQSxLQUFLLENBQUNGLElBQUksS0FBS0EsSUFBSSxFQUFFO1lBQ3ZCQyxJQUFJLEdBQUdDLEtBQUssQ0FBQztTQUNkO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsT0FBT0QsSUFBSSxDQUFDO0NBQ2IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL3NyYy91dGlscy90aHJlZS5qcz9iZjMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhY2hlLCBUZXh0dXJlTG9hZGVyIH0gZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgRFJBQ09Mb2FkZXIsIEdMVEZMb2FkZXIgfSBmcm9tICd0aHJlZS1zdGRsaWInO1xuXG4vLyBFbmFibGUgY2FjaGluZyBmb3IgYWxsIGxvYWRlcnNcbkNhY2hlLmVuYWJsZWQgPSB0cnVlO1xuXG5jb25zdCBkcmFjb0xvYWRlciA9IG5ldyBEUkFDT0xvYWRlcigpO1xuY29uc3QgZ2x0ZkxvYWRlciA9IG5ldyBHTFRGTG9hZGVyKCk7XG5kcmFjb0xvYWRlci5zZXREZWNvZGVyUGF0aCgnL2RyYWNvLycpO1xuZ2x0ZkxvYWRlci5zZXREUkFDT0xvYWRlcihkcmFjb0xvYWRlcik7XG5cbi8qKlxuICogR0xURiBtb2RlbCBsb2FkZXIgY29uZmlndXJlZCB3aXRoIGRyYWNvIGRlY29kZXJcbiAqL1xuZXhwb3J0IGNvbnN0IG1vZGVsTG9hZGVyID0gZ2x0ZkxvYWRlcjtcbmV4cG9ydCBjb25zdCB0ZXh0dXJlTG9hZGVyID0gbmV3IFRleHR1cmVMb2FkZXIoKTtcblxuLyoqXG4gKiBDbGVhbiB1cCBhIHNjZW5lJ3MgbWF0ZXJpYWxzIGFuZCBnZW9tZXRyeVxuICovXG5leHBvcnQgY29uc3QgY2xlYW5TY2VuZSA9IHNjZW5lID0+IHtcbiAgc2NlbmU/LnRyYXZlcnNlKG9iamVjdCA9PiB7XG4gICAgaWYgKCFvYmplY3QuaXNNZXNoKSByZXR1cm47XG5cbiAgICBvYmplY3QuZ2VvbWV0cnkuZGlzcG9zZSgpO1xuXG4gICAgaWYgKG9iamVjdC5tYXRlcmlhbC5pc01hdGVyaWFsKSB7XG4gICAgICBjbGVhbk1hdGVyaWFsKG9iamVjdC5tYXRlcmlhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoY29uc3QgbWF0ZXJpYWwgb2Ygb2JqZWN0Lm1hdGVyaWFsKSB7XG4gICAgICAgIGNsZWFuTWF0ZXJpYWwobWF0ZXJpYWwpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIENsZWFuIHVwIGFuZCBkaXNwb3NlIG9mIGEgbWF0ZXJpYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGNsZWFuTWF0ZXJpYWwgPSBtYXRlcmlhbCA9PiB7XG4gIG1hdGVyaWFsLmRpc3Bvc2UoKTtcblxuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhtYXRlcmlhbCkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IG1hdGVyaWFsW2tleV07XG4gICAgaWYgKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgJ21pbkZpbHRlcicgaW4gdmFsdWUpIHtcbiAgICAgIHZhbHVlLmRpc3Bvc2UoKTtcblxuICAgICAgLy8gQ2xvc2UgR0xURiBiaXRtYXAgdGV4dHVyZXNcbiAgICAgIHZhbHVlLnNvdXJjZT8uZGF0YT8uY2xvc2U/LigpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBDbGVhbiB1cCBhbmQgZGlzcG9zZSBvZiBhIHJlbmRlcmVyXG4gKi9cbmV4cG9ydCBjb25zdCBjbGVhblJlbmRlcmVyID0gcmVuZGVyZXIgPT4ge1xuICByZW5kZXJlci5kaXNwb3NlKCk7XG4gIHJlbmRlcmVyID0gbnVsbDtcbn07XG5cbi8qKlxuICogQ2xlYW4gdXAgbGlnaHRzIGJ5IHJlbW92aW5nIHRoZW0gZnJvbSB0aGVpciBwYXJlbnRcbiAqL1xuZXhwb3J0IGNvbnN0IHJlbW92ZUxpZ2h0cyA9IGxpZ2h0cyA9PiB7XG4gIGZvciAoY29uc3QgbGlnaHQgb2YgbGlnaHRzKSB7XG4gICAgbGlnaHQucGFyZW50LnJlbW92ZShsaWdodCk7XG4gIH1cbn07XG5cbi8qKlxuICogR2V0IGNoaWxkIGJ5IG5hbWVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldENoaWxkID0gKG5hbWUsIG9iamVjdCkgPT4ge1xuICBsZXQgbm9kZTtcblxuICBvYmplY3QudHJhdmVyc2UoY2hpbGQgPT4ge1xuICAgIGlmIChjaGlsZC5uYW1lID09PSBuYW1lKSB7XG4gICAgICBub2RlID0gY2hpbGQ7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbm9kZTtcbn07XG4iXSwibmFtZXMiOlsiQ2FjaGUiLCJUZXh0dXJlTG9hZGVyIiwiRFJBQ09Mb2FkZXIiLCJHTFRGTG9hZGVyIiwiZW5hYmxlZCIsImRyYWNvTG9hZGVyIiwiZ2x0ZkxvYWRlciIsInNldERlY29kZXJQYXRoIiwic2V0RFJBQ09Mb2FkZXIiLCJtb2RlbExvYWRlciIsInRleHR1cmVMb2FkZXIiLCJjbGVhblNjZW5lIiwic2NlbmUiLCJ0cmF2ZXJzZSIsIm9iamVjdCIsImlzTWVzaCIsImdlb21ldHJ5IiwiZGlzcG9zZSIsIm1hdGVyaWFsIiwiaXNNYXRlcmlhbCIsImNsZWFuTWF0ZXJpYWwiLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwidmFsdWUiLCJzb3VyY2UiLCJkYXRhIiwiY2xvc2UiLCJjbGVhblJlbmRlcmVyIiwicmVuZGVyZXIiLCJyZW1vdmVMaWdodHMiLCJsaWdodHMiLCJsaWdodCIsInBhcmVudCIsInJlbW92ZSIsImdldENoaWxkIiwibmFtZSIsIm5vZGUiLCJjaGlsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/three.js\n");

/***/ })

};
;